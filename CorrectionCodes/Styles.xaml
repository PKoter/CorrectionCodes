<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
										xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
										xmlns:local="clr-namespace:CorrectionCodes"
										xmlns:components="clr-namespace:CorrectionCodes.Components"
										xmlns:models="clr-namespace:CorrectionCodes.Models"
										xmlns:system="clr-namespace:System;assembly=mscorlib">
	<Style TargetType="ListViewItem">
		<Setter Property="Focusable" Value="False"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ListViewItem}">
					<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
														SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
														VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="ListBoxItem">
		<Setter Property="Focusable" Value="False"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ListBoxItem}">
					<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
														SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
														VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style BasedOn="{StaticResource {x:Type Button}}" x:Key="bitBtn" TargetType="Button">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">
					<Rectangle x:Name="rect" Stroke="Transparent" Fill="Transparent"/>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="rect" Property="Fill" Value="#10000000"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="bitBorder" TargetType="Border">
		<Style.Triggers>
			<Trigger Property="UIElement.IsMouseOver" Value="True">
				<Setter Property="Panel.Background" Value="#FFBEE6FD"/>
			</Trigger>
		</Style.Triggers>
	</Style>

	<Style TargetType="components:EditableBitTable">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="components:EditableBitTable">
					<ListView x:Name="list" Background="Transparent" BorderBrush="DarkBlue" BorderThickness="1" 
										ItemsSource="{Binding ItemsSource, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
										ScrollViewer.HorizontalScrollBarVisibility="Disabled" >
						<ListView.ItemsPanel>
							<ItemsPanelTemplate>
								<WrapPanel ItemWidth="240" IsItemsHost="True" />
							</ItemsPanelTemplate>
						</ListView.ItemsPanel>
						<ListBox.ItemTemplate>
							<DataTemplate DataType="models:ByteModel">
								<StackPanel Orientation="Horizontal" Margin="5,5,0,0" Width="250" Height="30">
									<Border Height="20" MinWidth="40" Background="Gainsboro">
										<Border.ToolTip>
											<TextBlock Text="{Binding Tooltip, Mode=OneWay}" Margin="10,0" FontSize="14"/>
										</Border.ToolTip>
										<TextBlock x:Name="index" Text="{Binding Index, Mode=OneWay}" VerticalAlignment="Center" FontSize="14"
															 Foreground="Blue" HorizontalAlignment="Right" FontWeight="Bold"/>
									</Border>
									<ListBox ItemsSource="{Binding Bits, Mode=OneWay}" Background="Transparent" BorderBrush="Transparent" 
													 Padding="0">
										<ListBox.ItemsPanel>
											<ItemsPanelTemplate>
												<StackPanel Orientation="Horizontal" />
											</ItemsPanelTemplate>
										</ListBox.ItemsPanel>
										<ListBox.ItemTemplate>
											<DataTemplate DataType="models:BitModel">
												<Grid Margin="0,0,0,0" Width="22" Height="22">
													<Border x:Name="border" BorderBrush="DimGray" Background="GhostWhite" BorderThickness="0,1,1,1"
																	Style="{StaticResource bitBorder}" IsHitTestVisible="False">
														<TextBlock Text="{Binding NumericValue, Mode=OneWay}" FontSize="14" HorizontalAlignment="Center"
																			 VerticalAlignment="Center" />
													</Border> 
													<Button x:Name="btn" Style="{StaticResource bitBtn}"
																	Command="{Binding FlipBitCommand, Mode=OneTime, RelativeSource={RelativeSource FindAncestor, AncestorType=components:EditableBitTable}}" 
																	CommandParameter="{Binding Mode=OneWay}">
													</Button>
												</Grid>
												<DataTemplate.Triggers>
													<DataTrigger Binding="{Binding RelativeSource={RelativeSource PreviousData}}" Value="{x:Null}">
														<Setter TargetName="border" Property="BorderThickness" Value="1"/>
													</DataTrigger>
													<DataTrigger Binding="{Binding Modified, Mode=OneWay}" Value="True">
														<Setter TargetName="border" Property="Background" Value="#AFFFDEB3"/>
													</DataTrigger>
													<DataTrigger Binding="{Binding DetectedError, Mode=OneWay}" Value="True">
														<Setter TargetName="border" Property="Background" Value="#AFBDFFB3"/>
													</DataTrigger>
												</DataTemplate.Triggers>
											</DataTemplate>
										</ListBox.ItemTemplate>
									</ListBox>
								</StackPanel>
								<DataTemplate.Triggers>
									<DataTrigger Binding="{Binding IsChecksum, Mode=OneTime}" Value="True">
										<Setter TargetName="index" Property="Foreground" Value="LimeGreen"/>
									</DataTrigger>
								</DataTemplate.Triggers>
							</DataTemplate>
						</ListBox.ItemTemplate>
					</ListView>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="TabItem">
		<Setter Property="FrameworkElement.FocusVisualStyle">
			<Setter.Value>
				<Style TargetType="IFrameworkInputElement">
					<Setter Property="Control.Template">
						<Setter.Value>
							<ControlTemplate>
								<Rectangle Stroke="Black" StrokeThickness="1" StrokeDashArray="1 2" Margin="2,2,2,2" SnapsToDevicePixels="True" />
							</ControlTemplate>
						</Setter.Value>
					</Setter>
				</Style>
			</Setter.Value>
		</Setter>
		<Setter Property="TextElement.Foreground" Value="#FF000000"/>
		<Setter Property="Panel.Background" Value="#FFF0F0F0"/>
		<Setter Property="Border.BorderBrush" Value="#FFACACAC"/>
		<Setter Property="FrameworkElement.Margin" Value="0"/>
		<Setter Property="Control.Padding" Value="8,2,8,2"/>
		<Setter Property="Control.HorizontalContentAlignment" Value="Stretch"/>
		<Setter Property="Control.VerticalContentAlignment" Value="Stretch"/>
		<Setter Property="Control.Template">
			<Setter.Value>
				<ControlTemplate TargetType="TabItem">
					<Border BorderThickness="1,1,1,0" BorderBrush="{TemplateBinding Border.BorderBrush}" 
									Background="{TemplateBinding Panel.Background}" Name="mainBorder" Margin="0,-2,0,0">
						<ContentPresenter RecognizesAccessKey="True" Content="{TemplateBinding HeaderedContentControl.Header}" 
															ContentTemplate="{TemplateBinding HeaderedContentControl.HeaderTemplate}" 
															ContentStringFormat="{TemplateBinding HeaderedContentControl.HeaderStringFormat}" 
															ContentSource="Header" Name="contentPresenter" Margin="{TemplateBinding Control.Padding}" 
															HorizontalAlignment="Stretch" VerticalAlignment="Stretch" 
															SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" Focusable="False" />
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True" SourceName="mainBorder">
							<Setter Property="Panel.Background" TargetName="mainBorder" Value="#8F9EC4DA"/>
						</Trigger>
						<Trigger Property="IsSelected" Value="True">
							<Setter Property="Panel.Background" TargetName="mainBorder" Value="LightSkyBlue"/>
							<Setter Property="Panel.ZIndex" Value="1"/>
							<Setter Property="BorderThickness" TargetName="mainBorder" Value="0"/>
							<Setter Property="Margin" TargetName="mainBorder" Value="0,-2,0,-1"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="TabPanel" >
		<Setter Property="Margin" Value="0"/>
	</Style>
</ResourceDictionary>